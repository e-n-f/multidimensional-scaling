#!/usr/bin/perl

$minlat = 37.693601037244406;
$minlon = -122.52914428710938;
$maxlat = 37.848290306973134;
$maxlon = -122.33578269994847;

$size = 200;

while (<STDIN>) {
	($when, $a, $to, $b, $date, $time, $sec, $dist, $speed) = split(/ /);

	next if $speed > 85;
	next if $sec > 245 || $sec <= 0;
	next if $dist/$sec < 1.5;

	if ($seen{$date} eq "") {
		print STDERR "$date\n";
		$seen{$date} = 1;
	}

	$rate = $sec / $dist;

	($lat1, $lon1) = split(/,/, $a);
	($lat2, $lon2) = split(/,/, $b);

	$y1 = $size * (($lat1 - $maxlat) / ($minlat - $maxlat));
	$x1 = $size * (($lon1 - $minlon) / ($maxlon - $minlon));

	$y2 = $size * (($lat2 - $maxlat) / ($minlat - $maxlat));
	$x2 = $size * (($lon2 - $minlon) / ($maxlon - $minlon));

	$xd = $x2 - $y1;
	$yd = $y2 - $y1;
	$dist = sqrt($xd * $xd + $yd * $yd);

	$x1 = int($x1);
	$y1 = int($y1);
	$x2 = int($x2);
	$y2 = int($y2);

	$ixd = $x2 - $x1;
	$iyd = $y2 - $y1;
	$idist = sqrt($ixd * $ixd + $iyd * $iyd);

	next if ($x1 == $x2 && $y1 == $y2);
	if ($idist == 0) {
		print STDERR "how is this possible? $x1 $y1 $x2 $y2 $idist\n";
		next;
	}
	#print "$idist $x1 $y1 $x2 $y2\n";

	#printf("%.6f\n", $sec * $idist / $dist);

	$time{"$x1 $y1 $x2 $y2"} += $sec * $idist / $dist;
	$count{"$x1 $y1 $x2 $y2"}++;

	$time{"$x2 $y2 $x1 $y1"} += $sec * $idist / $dist;
	$count{"$x2 $y2 $x1 $y1"}++;

	##$avg += (2 * $sec * $idist / $dist / $idist);
	#$avg += (2 * $sec * $idist / $dist);
	#$sum += 2;
}

for $loc (keys(%time)) {
	$avg += $time{$loc};
	$sum += $count{$loc};
}
$avg /= $sum;

print STDERR "avg is $avg\n";

for $loc (keys(%time)) {
	($x1, $y1, $x2, $y2) = split(/ /, $loc);

	if (0) {
		printf("%.8f %s ", $time{$loc} / $count{$loc} / $avg, $loc);
		printf("%.6f,%.6f to %.6f,%.6f\n",
			 $y1 / $size * ($maxlat - $minlat) + $minlat,
			 $x1 / $size * ($maxlon - $minlon) + $minlon,
			 $y2 / $size * ($maxlat - $minlat) + $minlat,
			 $x2 / $size * ($maxlon - $minlon) + $minlon);
	}

	push @forces, sprintf("%d %d %d %d %.8f %d", $x1, $y1, $x2, $y2, $time{$loc} / $count{$loc} / $avg, $count{$loc});
}

for ($y = 0; $y <= $size; $y++) {
	for ($x = 0; $x <= $size; $x++) {
		#push @forces, sprintf("%d %d %d %d %d %d", $x, $y, $x - 1, $y, 1, 1);
		#push @forces, sprintf("%d %d %d %d %d %d", $x, $y, $x + 1, $y, 1, 1);
		#push @forces, sprintf("%d %d %d %d %d %d", $x, $y, $x, $y - 1, 1, 1);
		#push @forces, sprintf("%d %d %d %d %d %d", $x, $y, $x, $y + 1, 1, 1);

		$x{"$x $y"} = $x;
		$y{"$x $y"} = $y;

		$loc = "$x $y";
		#print "loc >$loc<   at $x{$loc} $y{$loc}\n";
	}
}

#while (1) 
for ($pass = 0; $pass < 500; $pass++)
{
	print STDERR "pass $pass\n";

	%pullx = ();
	%pully = ();
	%pullcount = ();

	for $force ((@forces)) {
		($x1, $y1, $x2, $y2, $wantdist, $count) = split(/ /, $force);

		$distx = $x{"$x2 $y2"} - $x{"$x1 $y1"};
		$disty = $y{"$x2 $y2"} - $y{"$x1 $y1"};
		$dist = sqrt($distx * $distx + $disty * $disty);
		$angle = atan2($disty, $distx);

		#print "force! $force\n";

		if ($dist == 0) {
			$dist = .00001;
		}

if (0) {
		print "$x2 $y2 is at " . $x{"$x2 $y2"} . "," . $y{"$x2 $y2"} . "\n";
		print "pulled toward $x1 $y1 at ". $x{"$x1 $y1"} . "," . $y{"$x1 $y1"} . "\n";
		print "distance is $dist ($distx $disty) would like to be $wantdist\n";
		printf("therefore pulling %.6f %.6f\n", -cos($angle) * ($dist - $wantdist), -sin($angle) * ($dist - $wantdist));
}

		#$pullx{"$x2 $y2"} -= cos($angle) * ($dist - $wantdist) * $count / ($dist * $dist);
		#$pully{"$x2 $y2"} -= sin($angle) * ($dist - $wantdist) * $count / ($dist * $dist);
		#$pullcount{"$x2 $y2"} += $count / ($dist * $dist);

		$pullx{"$x2 $y2"} -= cos($angle) * ($dist - $wantdist) * $count;
		$pully{"$x2 $y2"} -= sin($angle) * ($dist - $wantdist) * $count;
		$pullcount{"$x2 $y2"} += $count;
	}

	%ox = %x;
	%oy = %y;

	for $loc (keys(%pullx)) {
		($x, $y) = split(/ /, $loc);

		if ($x < 1 || $y < 1 || $x > $size - 1 || $y > $size - 1) {
			next;
		}

		if (abs($pullx{$loc}) + abs($pully{$loc}) > 0) {
			$angle = atan2($pully{$loc}, $pullx{$loc});
			$x{$loc} += .1 * cos($angle);
			$y{$loc} += .1 * sin($angle);

			$leftloc = sprintf("%d %d", $x - 1, $y);
			$rightloc = sprintf("%d %d", $x + 1, $y);
			$uploc = sprintf("%d %d", $x, $y - 1);
			$downloc = sprintf("%d %d", $x, $y + 1);

			if ($x{$loc} < $x{$leftloc}) {
				$x{$loc} = $x{$leftloc};
			}
			if ($x{$loc} > $x{$rightloc}) {
				$x{$loc} = $x{$rightloc};
			}
			if ($y{$loc} < $y{$uploc}) {
				$y{$loc} = $y{$uploc};
			}
			if ($y{$loc} > $y{$downloc}) {
				$y{$loc} = $y{$downloc};
			}
		}

		if (0 && $pullcount{$loc} >= 5) {
			print "loc >$loc<   at $x{$loc} $y{$loc} ";
			printf("pulled %.6f %.6f\n", $pullx{$loc} / $pullcount{$loc}, $pully{$loc} / $pullcount{$loc});
		}

		if (0) {
			if (abs($pullx{$loc}) + abs($pully{$loc}) >= 1) {
				$angle = atan2($pullx{$loc}, $pully{$loc});
				$x{$loc} += cos($angle);
				$y{$loc} += sin($angle);
			} else {
				$x{$loc} += $pullx{$loc};
				$y{$loc} += $pully{$loc};
			}
		}

		if (0) {
			if ($pullx{$loc} > 0) {
				$x{$loc} = (9 * $x{$loc} +
					    $ox{sprintf("%d %d", $x + 1, $y)}) / 10;
				$y{$loc} = (9 * $y{$loc} +
					    $oy{sprintf("%d %d", $x + 1, $y)}) / 10;
				#print "to right: pulled $ox{$loc} $oy{$loc} to $x{$loc} $y{$loc}\n";
			}
			if ($pullx{$loc} < 0) {
				$x{$loc} = (9 * $x{$loc} +
					    $ox{sprintf("%d %d", $x - 1, $y)}) / 10;
				$y{$loc} = (9 * $y{$loc} +
					    $oy{sprintf("%d %d", $x - 1, $y)}) / 10;
				#print "to left: pulled $ox{$loc} $oy{$loc} to $x{$loc} $y{$loc}\n";
			}

			if ($pully{$loc} > 0) {
				$y{$loc} = (9 * $y{$loc} +
					    $oy{sprintf("%d %d", $x, $y + 1)}) / 10;
				$x{$loc} = (9 * $x{$loc} +
					    $ox{sprintf("%d %d", $x, $y + 1)}) / 10;
				#print "to top: pulled $ox{$loc} $oy{$loc} to $x{$loc} $y{$loc}\n";
			}
			if ($pully{$loc} < 0) {
				$y{$loc} = (9 * $y{$loc} +
					    $oy{sprintf("%d %d", $x, $y - 1)}) / 10;
				$x{$loc} = (9 * $x{$loc} +
					    $ox{sprintf("%d %d", $x, $y - 1)}) / 10;
				#print "to bottom: pulled $ox{$loc} $oy{$loc} to $x{$loc} $y{$loc}\n";
			}
		}
	}

	if (0) {
		print "0 setlinewidth\n";

		for ($y = 0; $y <= $size; $y++) {
			for ($x = 0; $x <= $size; $x++) {
				$loc = "$x $y";

				printf("%.3f %.3f %s ", $x{$loc} * 612 / $size, 612 - ($y{$loc} * 612 / $size), $x == 0 ? "moveto" : "lineto");
			}

			print "stroke\n";
		}

		for ($x = 0; $x <= $size; $x++) {
			for ($y = 0; $y <= $size; $y++) {
				$loc = "$x $y";

				printf("%.3f %.3f %s ", $x{$loc} * 612 / $size, 612 - ($y{$loc} * 612 / $size), $y == 0 ? "moveto" : "lineto");
			}

			print "stroke\n";
		}

		print "showpage\n";
	}

	open(OUT, ">$ARGV[0]-$pass.out");
	for ($y = 0; $y <= $size; $y++) {
		for ($x = 0; $x <= $size; $x++) {
			$loc = "$x $y";

			printf OUT ("%.3f %.3f\n", $x{$loc}, $y{$loc});
		}
	}
	close(OUT);
}

for ($y = 0; $y <= $size; $y++) {
	for ($x = 0; $x <= $size; $x++) {
		$loc = "$x $y";

		printf("%.3f %.3f\n", $x{$loc}, $y{$loc});
	}
}
